=>0?resetn,0;
/ck;

#(0 to #pragma_fsm_generic{N}#pragma)?E;
#(1 to #pragma_fsm_generic{N-1}#pragma)->0?NOT E;
#pragma_fsm_generic{N-1}#pragma->#pragma_fsm_generic{N}#pragma?E:DELAYED_RISING;

#(#pragma_fsm_generic{N}#pragma to #pragma_fsm_generic{(2*N)-1}#pragma)?NOT E;
#(#pragma_fsm_generic{N+1}#pragma to #pragma_fsm_generic{(2*N)-2}#pragma)->#pragma_fsm_generic{N}#pragma?E;
#pragma_fsm_generic{(2*N)-1}#pragma->0?NOT E:DELAYED_FALLING;

->#pragma_fsm_generic{N}#pragma?SRESET AND   E;
->0?SRESET AND NOT  E;


#pragma_vhdl_testbench{  
 ---------------------------------------	
wait until (ck'event and ck='0' );
 
E<='1';
SRESET<='1';
wait for ck_period;
SRESET<='0';

for j in 1 to 20 loop
for i in 0 to 5 loop
E<='1';
wait for ck_period*j;
E<='0';
wait for ck_period*j;
END LOOP;
END LOOP;
---------------------------------------	
}#pragma

